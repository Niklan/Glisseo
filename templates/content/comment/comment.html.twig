{% set bem_block = ('comment-' ~ comment.bundle() ~ '-' ~ view_mode)|clean_class|replace({'--': '-'}) %}
{%
  set bem_modifiers = bem_modifiers|merge([
    view_mode != 'default' ? 'vm-' ~ view_mode|clean_class|replace({'--': '-'}),
  ])
%}
{%
  set classes = [
    bem_block,
  ]
%}
{% for bem_modifier in bem_modifiers %}
  {% if bem_modifier|length %}
    {% set classes = classes|merge([bem_block ~ '--' ~ bem_modifier]) %}
  {% endif %}
{% endfor %}
<article{{ attributes.addClass('js-comment', classes) }}>
  {% block comment %}
    {#
      Hide the "new" indicator by default, let a piece of JavaScript ask the
      server which comments are new for the user. Rendering the final "new"
      indicator here would break the render cache.
    #}
    <mark class="hidden" data-comment-timestamp="{{ new_indicator_timestamp }}"></mark>

    <div{{ content_attributes.addClass(bem_block ~ '__content') }}>
      {% block content %}
        {% if title %}
          {{ title_prefix }}
          <h3{{ title_attributes.addClass(bem_block ~ '__title') }}>
            {% block title %}
              {{ title }}
            {% endblock %}
          </h3>
          {{ title_suffix }}
        {% endif %}

        {{ content }}
      {% endblock %}
    </div>

    <footer class="{{ bem_block }}__footer">
      {% block footer %}
        {{ user_picture }}
        <p>{{ submitted }}</p>

        {#
          Indicate the semantic relationship between parent and child comments for
          accessibility. The list is difficult to navigate in a screen reader
          without this information.
        #}
        {% if parent %}
          <p class="visually-hidden">{{ parent }}</p>
        {% endif %}

        {{ permalink }}
      {% endblock %}
    </footer>
  {% endblock comment %}
</article>
